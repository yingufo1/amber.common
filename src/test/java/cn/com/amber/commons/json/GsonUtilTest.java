package cn.com.amber.commons.json;import com.google.gson.reflect.TypeToken;import org.junit.Test;import java.lang.reflect.Type;/** * TODO:class description * * @author yangying * @version 1.0 * @since 2022/9/19 **/public class GsonUtilTest {    class A<E>{        private E e;        private int i;        protected String value;        public A(E e,int i){            this.e = e;            this.i = i;        }        public E getE(){            return e;        }    }    class B{        private String name;        protected String value;        public B(String name){            this.name = name;        }        public String getName(){            return name;        }        public void setValue(String value){            this.value = value;        }    }    class C extends B{        public C(String name) {            super(name);        }    }    @Test    public void test(){        B b = new B("hah");        A<B> a = new A<B>(b,100);        Type type = new TypeToken<A<B>>(){}.getType();        String json = GsonUtil.serializing(a,type);        System.out.println(json);        String num = GsonUtil.getStringFromKey(json,"i");        System.out.println(num);        a = GsonUtil.deserializing(json,type);        B  bb = (B)a.getE();        System.out.println(bb.getName());        B b1 = new B("bb1");        b1.setValue("vb1");        C c1 = new C("cc1");        c1.setValue("vc1");        System.out.println(b1.value);        System.out.println(c1.value);    }}